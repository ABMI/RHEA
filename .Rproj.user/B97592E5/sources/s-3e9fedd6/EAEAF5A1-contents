#' visitCount function
#'
#' This is a function that counts the number of visit per person
#'
#' @param Cohort
#' @param cohortDatabaseSchema
#' @param cdmDatabaseSchema
#' @param cohortTable
#' @param DiganosisConceptID
#' @param connection

#' @export calculation
calculation <- function(){
  ## totalVisitTable
  sql_AvgVisit <- "SELECT a.subject_id, m.visit_concept_id, m.visit_start_date, m.visit_end_date
    FROM @cohort_database_schema.@cohort_table a
    LEFT OUTER JOIN @cdm_database_schema.visit_occurrence m on a.subject_id = m.person_id
    LEFT OUTER JOIN @cdm_database_schema.condition_occurrence b on a.subject_id = b.person_id
    where m.visit_start_date between CONVERT(DATE, b.condition_start_date)
                                 and CONVERT(DATE, b.condition_end_date);"

  sql_AvgVisit <- SqlRender::render(sql_AvgVisit,
                                    cohort_database_schema = cohortDatabaseSchema,
                                    cdm_database_schema = cdmDatabaseSchema,
                                    cohort_table = cohortTable)

  totalVisitTable <- DatabaseConnector::querySql(connection, sql_AvgVisit)


  ## Ave_obserperiod
  # Get distinct start and end dates for each subject
  obserperiod_start <- totalVisitTable %>%
    distinct(SUBJECT_ID, VISIT_START_DATE, VISIT_END_DATE) %>%
    arrange(SUBJECT_ID, VISIT_START_DATE) %>%
    group_by(SUBJECT_ID) %>%
    slice(1) %>%
    ungroup() %>%
    select(SUBJECT_ID, VISIT_START_DATE)

  obserperiod_end <- totalVisitTable %>%
    distinct(SUBJECT_ID, VISIT_START_DATE, VISIT_END_DATE) %>%
    arrange(SUBJECT_ID, desc(VISIT_END_DATE)) %>%
    group_by(SUBJECT_ID) %>%
    slice(1) %>%
    ungroup() %>%
    select(SUBJECT_ID, VISIT_END_DATE)

  # Calculate observation period duration in days
  periodTable <- left_join(obserperiod_end, obserperiod_start, by = "SUBJECT_ID") %>%
    mutate(period = as.numeric(difftime(VISIT_END_DATE, VISIT_START_DATE, units = "days")))

  # Calculate average observation period
  Ave_obserperiod <- paste0(
    round(mean(periodTable$period, na.rm = TRUE), digits = 2), " (",
    round(sd(periodTable$period, na.rm = TRUE), digits = 2), ")"
  )


  ## Ave_visit
  # Convert totalVisitTable to data.table
  dt_totalVisitTable <- as.data.table(totalVisitTable)

  # Calculate visit counts for each SUBJECT_ID
  fileter_visit <- dt_totalVisitTable %>% distinct(SUBJECT_ID, VISIT_CONCEPT_ID, VISIT_START_DATE)

  visit_counts <- fileter_visit %>%
    group_by(SUBJECT_ID) %>%
    summarise(visit_count = n()) %>%
    ungroup()

  # Calculate mean and standard deviation of visit counts
  mean_visit <- mean(visit_counts$visit_count)
  sd_visit <- sd(visit_counts$visit_count)

  Ave_visit <- paste0(round(mean_visit, digits = 2), " (", round(sd_visit, digits = 2), ")")


  ## Ave_EmerVisit
  filterEmergency <- totalVisitTable %>%
    filter(VISIT_CONCEPT_ID %in% c(9203, 262)) %>%
    distinct(SUBJECT_ID, VISIT_START_DATE)

  EmerVisit_counts <- filterEmergency %>%
    group_by(SUBJECT_ID) %>%
    summarise(visit_count = n()) %>%
    ungroup()

  mean_EmerVisit <- mean(EmerVisit_counts$visit_count)
  sd_EmerVisit <- sd(EmerVisit_counts$visit_count)

  Ave_EmerVisit <- paste0(round(mean_EmerVisit, digits = 2), " (", round(sd_EmerVisit, digits = 2), ")")


  ## Ave_HosVisit
  filterHOS <- totalVisitTable %>%
    filter(VISIT_CONCEPT_ID != 9202) %>%
    mutate(Day = difftime(VISIT_END_DATE, VISIT_START_DATE, units = "days")) %>%
    filter(Day != 0) %>%
    distinct()

  HOSvisit_counts <- filterHOS %>%
    group_by(SUBJECT_ID) %>%
    summarise(visit_count = n_distinct(VISIT_START_DATE)) %>%
    ungroup()

  Ave_HosVisit <- paste0(
    round(mean(HOSvisit_counts$visit_count, na.rm = TRUE), digits = 2), " (",
    round(sd(HOSvisit_counts$visit_count, na.rm = TRUE), digits = 2), ")"
  )


  ## Ave_Hosperiod
  Hosperiod_start <- filterHOS %>%
    group_by(SUBJECT_ID) %>%
    summarise(min_start = min(VISIT_START_DATE)) %>%
    ungroup()

  Hosperiod_end <- filterHOS %>%
    group_by(SUBJECT_ID) %>%
    summarise(max_end = max(VISIT_END_DATE)) %>%
    ungroup()

  Hosperiod <- left_join(Hosperiod_end, Hosperiod_start, by = "SUBJECT_ID") %>%
    mutate(period = as.numeric(difftime(max_end, min_start, units = "days")))

  Ave_Hosperiod <- paste0(
    round(mean(Hosperiod$period, na.rm = TRUE), digits = 2), " (",
    round(sd(Hosperiod$period, na.rm = TRUE), digits = 2), ")"
  )

  calculation_df <- data.table(
    lists = c("Observation Duration(days)", "Visit", "ER Visit", "Hospitalization", "Hospitalization Duration(days)"),
    Mean_SD = c(Ave_obserperiod, Ave_visit, Ave_EmerVisit, Ave_HosVisit, Ave_Hosperiod)
  )

  return(calculation_df)
}


#' @export drugRank
drugRank <- function(person_id){
  sql_drug <- "SELECT f.person_id, f.drug_concept_id, z.concept_name, f.drug_era_start_date, f.drug_era_end_date
               FROM @cdm_database_schema.drug_era f, @cdm_database_schema.CONCEPT z
               where f.person_id in (@subjectID) and f.drug_concept_id = z.concept_id;"

  sql_drug <- SqlRender::render(sql_drug,
                                cdm_database_schema = cdmDatabaseSchema,
                                subjectID = person_id)

  df_drug <- as.data.frame(DatabaseConnector::querySql(connection, sql_drug))


  drug_counts <- df_drug %>%
    group_by(PERSON_ID, CONCEPT_NAME) %>%
    summarise(count = n()) %>%
    ungroup()

  concept_name_average <- drug_counts %>%
    group_by(CONCEPT_NAME) %>%
    summarise(average_per_person = sum(count) / n()) %>%
    ungroup()

  drug_rank <- as.data.table(concept_name_average)
  drug_rank <- drug_rank[, .(CONCEPT_NAME, average_per_person, Rank = rank(-average_per_person, ties.method = "min"))]

  drug_rank <- drug_rank %>%
    select(Rank, CONCEPT_NAME, average_per_person) %>%
    arrange(desc(average_per_person))

  drug_rank$average_per_person <- round(drug_rank$average_per_person, digits = 2)

  setnames(drug_rank, c("CONCEPT_NAME", "average_per_person"), c("Drug Name", "Mean per person"))
}
